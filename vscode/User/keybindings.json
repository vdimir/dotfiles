// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "f2",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f2",
        "command": "bookmarks.listFromAllFiles"
    },
    {
        "key": "ctrl+f3",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+shift+g",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+shift+g",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorHasSelection && editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorHasSelection && editorFocus"
    },
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f3",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f3",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "shift+alt+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.closePanel",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+l",
        "command": "-aichat.newchataction"
    },
    {
        "key": "cmd+l",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+; cmd+l",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "cmd+; cmd+k",
        "command": "aichat.newchataction",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "cmd+; cmd+k",
        "command": "aichat.close-sidebar",
        "when": "!editorFocus",
    },
    {
        "key": "shift+cmd+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f1",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "shift+f1",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "cmd+u",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "f10",
        "command": "clangd.switchheadersource",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+o",
        "command": "-clangd.switchheadersource",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+cmd+d",
        "command": "gitlens.diffWithRevisionFrom"
    },
    {
        "key": "cmd+h cmd+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly && editorHasSelection"
    },
    {
        "key": "cmd+h cmd+f",
        "command": "editor.action.formatChanges",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly && !editorHasSelection"

    },
    {
        "key": "cmd+e cmd+e",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "cmd+e cmd+s",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+b",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "cmd+s n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+s cmd+s",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+s c",
        "command": "workbench.action.terminal.newWithCwd",
        "args": { "cwd": "${workspaceFolder}" },
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    // Terminal control sequences
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u0017" },
        "when": "terminalFocus"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u0004" },
        "when": "terminalFocus"
    },
    {
        "key": "cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u0003" },
        "when": "terminalFocus && !terminalTextSelected"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u000c" },
        "when": "terminalFocus"
    },
    {
        "key": "f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "workbench.action.tasks.reRunTask"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "cmd+e cmd+e",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+cmd+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "shift+cmd+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "cmd+'",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+cmd+[",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+'",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "shift+cmd+'",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "shift+cmd+;",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "shift+cmd+m",
        "command": "workbench.action.terminal.moveToEditor",
        "when": "panelFocus && terminalFocus"
    },
    {
        "key": "shift+cmd+m",
        "command": "workbench.action.terminal.moveToTerminalPanel",
        "when": "!panelFocus && terminalFocus"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+e cmd+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "cmd+e cmd+s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "cmd+k alt+cmd+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+down",
        "command": "cursorMove",
        "args": {
          "by": "line",
          "to": "down",
          "revealCursor": true,
          "value": 5,
        },
        "when": "editorFocus"
      },
      {
        "key": "ctrl+up",
        "command": "cursorMove",
        "args": {
          "by": "line",
          "to": "up",
          "revealCursor": true,
          "value": 5,
        },
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.files.openLocalFileFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openLocalFileFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "cmd+; s",
        "command": "editor.action.insertSnippet"
    },
    {
        "key": "cmd+; cmd+[",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "-emojisense.quickEmojiTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+i",
        "command": "-emojisense.quickEmoji",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+i",
        "command": "-emojisense.quickEmojitextTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+i",
        "command": "-emojisense.quickEmojitext",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; c",
        "command": "merge-conflict.next"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "cmd+e cmd+r",
        "command": "git.revertSelectedRanges",
        "when": "!operationInProgress"
    },
    {
        "key": "cmd+right",
        "command": "editor.action.inlineSuggest.acceptNextLine",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "cmd+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "f5",
        "command": "workbench.action.tasks.restartTask",
        "when": "taskRunning"
    }
]
